/*
 * Auto-generated by CMake.
 * Do not modify or commit to source repository.
 */

#include "util.h"

using namespace std;

// namespace ${slice_module}ifacelog
namespace ifacelog
{

void toLogStream( bool x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Byte x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Short x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Int x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Long x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Float x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( Ice::Double x, std::ostream& os )
{
    os << " " << x;
}

void toLogStream( const std::string& x, std::ostream& os )
{
    // save the number of characters in this string
    os << " " << x.size();
    // now save the string itself
    os << " " << x;
}

////////

void fromLogStream( bool& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Byte& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Short& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Int& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Long& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Float& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( Ice::Double& x, std::istream& is )
{
    is >> x;
}

void fromLogStream( std::string& x, std::istream& is )
{
    // read the number of characters in this string
    size_t size;
    is >> size;
    // now read the string itself
    // TODO: there's probably a more efficient way to do this
    char c;
    // remove the leading space
    // is >> c;
    // now get the actual string
    for ( size_t i=0; i<size; ++i ) {
        is >> c;
        x += c;
    }
}

}
