/*
 * Auto-generated by CMake.
 * Do not modify or commit to source repository.
 */

#include "util.h"

#include <sstream>

using namespace std;

// namespace ${slice_module}ifacestring
namespace ifacestring
{

string toString( bool x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Byte x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Short x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Int x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Long x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Float x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( Ice::Double x, int recurse, int expand, int indent )
{
    stringstream ss;
    ss << x;
    return ss.str();
}

string toString( const string& x, int recurse, int expand, int indent )
{
    // should we limit the size, depending on 'expand' ???
    return x;
}

}
