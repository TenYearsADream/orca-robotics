/*
 *  Orca Project: Components for robotics.
 *
 *  Copyright (C) 2004-2006
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*!

@page orca_doc_dart2 Automated Testing with Dart2

Introduction to be written.

General things to note:
- cmake at least v2.2 is required
- It's best to do out-of-source build, i.e. all object/generated files are in one 'binary' directory. The reason is that it makes it simple for CTest to do a clean build every time by simply deleting all files in the build (or 'binary') directory.


@section server Dart2 Server

The <a href="http://129.78.210.237:8081/orca2/Dashboard"/>Dart2 server for Orca2</a> is up and running.


@section client Dart2 Client

@par Continuous Build

Here's the idea. A shell script runs continuously in the background. It sleeps for several minutes, then executes a CTest script which does the following: 1) the source tree is updated from CVS; 2) if any files are modified, the entire source tree is recompiled, and 3) a report is sent to the Dart2 server.

Here's what to do:
- checkout the Orca2 source tree from CVS and rename the directory, e.g. orca2-cont
- make a copy of the CTest script file [ORCA2-SRC]/scripts/dart2/orca2-cont-gcc40.cfg
- edit it by making sure that all paths and executables apply to your system. The settings are self-explanatory.
- test the script by running it manually
@verbatim
$ ctest -V -S orca2-cont-gcc40.cfg
@endverbatim
- make a copy of [ORCA2-SRC]/scripts/dart2/dart.cont and make sure it contains the full path to orca2-cont-gcc40.cfg
- execute the shell script dart.cont like this
@verbatim
$ nohup ./dart.cont >/dev/null 2>&1 &
@endverbatim
- now you can log out and the script will run forever.

@par Nightly Build

to be written

@par Experimental Build

to be written

*/
