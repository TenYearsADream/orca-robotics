#!/usr/bin/perl
#
# Adds 'header.html' and 'footer.html' into the
# named file at the appropriate spot.
#
# The appropriate spot depends on whether we're editting a
# doxygen_written file or a human_written file.
#
# Puts its output to stdout.
#
# Author: Alex Brooks
#
$USAGE="add_sidebar.pl < doxygen_written | human_written > <filename>";

# The stuff we look for in Doxygen files
$first_doxygen_tag  = "<!-- Generated by Doxygen";
#$second_doxygen_tag = "<hr size=\"1\"><address style=\"align: right;\"><small>Generated on ";
$second_doxygen_tag = "</body>";

# The path to the top of the structure from the doxygen files
$doxygen_path_to_top = "../../";

# The stuff we look for in human-written files
$first_human_tag  = "<!-- Do not edit or remove this line: it causes add_sidebar.pl to add the menu -->";
$second_human_tag = "<!-- Do not edit or remove this line: it causes add_sidebar.pl to add the footer -->";

# The path to the top of the structure from the human-written files
$human_path_to_top = "";

##############################################################################
##            There's no configuration stuff below this line                ##
##############################################################################

if ($#ARGV != 1)
{
    print STDERR "add_sidebar.pl: $USAGE\n";
    exit 1;
}

if ( $ARGV[0] =~ /doxygen_written/ )
{
    print STDERR "add_sidebar.pl: This file is written by Doxygen\n";

    $first_tag   = $first_doxygen_tag;
    $second_tag  = $second_doxygen_tag;
    $path_to_top = $doxygen_path_to_top;
}
elsif ( $ARGV[0] =~ /human_written/ )
{
    print STDERR "add_sidebar.pl: This file is written by a Human\n";

    $first_tag   = $first_human_tag;
    $second_tag  = $second_human_tag;
    $path_to_top = $human_path_to_top;
}
else
{
    print STDERR "add_sidebar.pl: $USAGE\n";
    exit 1;
}

#
# read in our own gear
#
open(HEADER,"<header.html") or die "Coudln't open header.html: $!\n";
open(FOOTER,"<footer.html") or die "Coudln't open footer.html: $!\n";

# The file to convert
$file = $ARGV[1];

open(THEFILE,"<$file") or die "Couldn't open $file: $!\n";

#
# Read in the header and footer
#
@headerLines = <HEADER>;
@footerLines = <FOOTER>;
close (HEADER);
close (FOOTER);

#
# Print a warning
#
print "\n";
print "<!--    WARNING   WARNING   WARNING   WARNING   WARNING     -->\n";
print "<!--                                                        -->\n";
print "<!--              This file is auto-generated.              -->\n";
print "<!--        DO NOT edit it, or your edits will be lost.     -->\n";
print "<!--                                                        -->\n";
print "<!--    WARNING   WARNING   WARNING   WARNING   WARNING     -->\n";
print "\n";
print "\n";

#
# Look for first doxygen tag
#
while ($line = <THEFILE>)
{
    if ( $line !~ /$first_tag/ )
    {
        print $line;
    }
    else
    {
        #
        # Found the line we wanted!  Insert our header.
        #
        foreach $hl (@headerLines)
        {
            $hl =~ s/\[PATH\]/$path_to_top/g;
            print $hl;
        }
        last;
    }
}
if ( $line !~ /$first_tag/ )
{
    print STDERR "add_sidebar.pl: ERROR: Couldn't find expected string '$first_tag'";
    exit 1;
}
print $line;

#
# Look for second tag
#
while ($line = <THEFILE>)
{
    if ( $line !~ /$second_tag/ )
    {
        print $line;
    }
    else
    {
        #
        # Found the line we wanted!  Insert our footer.
        #
        foreach $fl (@footerLines)
        {
            $fl =~ s/\[PATH\]/$path_to_top/g;
            print "$fl"
        }

        last;
    }
}
if ( $line !~ /$second_tag/ )
{
    print STDERR "add_sidebar.pl: ERROR: Couldn't find expected string '$second_tag'";
    exit 1;
}
print $line;

#
# Now just print out the rest of the file.
#
while ($line = <THEFILE>)
{
    print $line;
}

close(THEFILE);
