/*
 *  Orca-Base: Components for robotics.
 *
 *  Copyright (C) 2004
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

// do we need this group?
// @defgroup objects Objects

/*!

@defgroup interfaces Interfaces
@defgroup components Components
@defgroup utils Utilities
@defgroup examples Examples
@defgroup tests Tests

@defgroup apps Stand-Alone Components
@defgroup services IceBox Services
@defgroup cppcomps C++ Components
@defgroup javacomps Java Components
@defgroup linuxcomps Linux Components
@defgroup wincomps Windows Components
@defgroup linuxutils Linux Utilities
@defgroup winutils Windows Utilities

@mainpage Orca: Components for Robotics

Orca is an open-source framework for developing component-based robotic systems. It provides the means for defining and developing the building-blocks which can be pieced together to form arbitrarily
complex robotic systems, from single vehicles to distributed sensor networks.

Our main goal is the continuing progress in robotic research and the robotic industry. The main challenge we see at present is the software specific to robots, both its complexity and the sheer amount of it. Software reuse promises a solution to both of these problems. With this in mind, the project's objectives are:
- to \b enable software reuse by defining a set commonly-used interfaces;
- to \b simplify software reuse by providing libraries with a high-level convenient API; and
- to \b encourage software reuse by maintaining a repository of components.

Orca, currently in its second generation, differs from other robotic software frameworks in that it:
- adopts a @ref orca_doc_about_approach "Component-Based Software Engineering" approach;
- uses  an @ref orca_doc_about_whyice "industrial-strength library (Ice)" for communication and interface definition;
- aims to be @ref orca_doc_about_flexible "general, flexible and extensible", in order to place as few constraints as possible on system design;
- provides @ref orca_doc_about_tools "optional tools" to assist in the development of individual components and the management of large systems; and
- maintains a @ref orca_doc_about_repository "repository" of free, reusable components.

<hr>

@section more_information For more information

- To read general information: @ref orca_doc_about
- To download and install Orca: @ref orca_doc_getting
- To get set up and start running components: @ref orca_doc_quickstart
- For a quick overview of basic concepts: @ref orca_doc_overview
- To see a list of all available components: <a href="group__components.html">Component Repository</a>


Note: The documentation on this web page matches the latest release. A web
page is also generated hourly from <a href="http://orca-robotics.sourceforge.net/cvs/">the latest CVS version</a>.

@section current_status Current Status

Orca has recently transitioned from an implementation based on
selectable transport mechanisms (called <a href="http://orca-robotics.sf.net/orca1/">Orca1</a>) to Orca2, which @ref orca_doc_about_whyice "uses Ice" for all communications.  Our focus on component-based 
sotfware remains unchanged but we feel that Ice is far superior to any commercial and custom solutions we have looked at before.

While the current version of Orca2 is usable, things may change
frequently and the documentation is a little thin. Switching to Ice has caused large changes in the component model. This means that Orca1 and Orca2 components are mutually incompatible. The set of components currently available in Orca2 is small, however we will eventually
port over all the <a href="http://orca-robotics.sourceforge.net/orca1/components/html/modules.html">Orca1 components</a>.  Let us know if there's a particular component you need.


@section news News

- 16-Jan-06 The <a href="http://opium.acfr.usyd.edu.au:8081/orca2/Dashboard/">Dashboard</a> code testing system is back on line, now using Dart2.
- 13-15-Dec-05 Orca team gives talk at <a href="http://194.95.66.227/b-it-tutorial/index.html">B-IT Tutorial on Robot Middleware and Integration Frameworks</a>. Invited as one of the "six most prevalent middleware concepts and integration frameworks for mobile robots today" .
- 17-Nov-05 Main website points to Orca2 information. Orca1 is still available on orca-robotics.sf.net/orca1.
- 15-Nov-05 Released Orca 1.0.1 (part of Orca1).  Bugfixes only.
- 23-Oct-05 moved to an all-doxygen documentation system based largely on the <a href="http://playerstage.sf.net">Player/Stage v2.0</a> model.
- 11-Oct-05 started development of @b Orca2 using Ice.
- 11-Oct-05 @b Orca @b 1.0.0: Orca1 source has been frozen.
- @ref orca_doc_old_news



*/
