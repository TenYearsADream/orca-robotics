/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2006 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@page orca_doc_quickstart Quick-Start Guide

@note Reviewed for release 2.1.0.

This page describes how to get a quick demonstration up and running with your new Orca install. Before you begin, make sure that you've installed Orca (see @ref orca_doc_getting ).

@section orca_doc_quickstart_startup Starting Up the Infrastructure

We'll be using sample configuration files which are distributed with Orca. As the general rule, you shouldn't work or run programs from the distribution. So we'll create a separate directory and copy config files into it.
@verbatim
$ cd ~
$ mkdir sys
@endverbatim

@par IceGrid Registry

The IceGrid Registry provides a Naming service: a mapping from logical interface names to physical addresses. It's currently the only way for components to find one another. We create a separate directory for it to run in, copy a sample config file, create the database directory and start it up.
@verbatim
$ cd ~/sys; mkdir icereg; cd icereg
$ cp [ORCA2-SRC]/scripts/ice/icegridregistry.cfg .
$ mkdir db
$ icegridregistry --Ice.Config=icegridregistry.cfg
@endverbatim

This starts @c icegridregistry on your local machine.  If you're going to be using Orca a lot,
it's probably a good idea to set this up so it's always running on a single machine on the network.

@par IceStorm Service

<em>[<strong>Note for Debian/Ubuntu users</strong>: See an entry in the <a href="http://wiki2.cas.edu.au/orca/index.php/Orca:faq:ice" target="_blank">Wiki FAQ</a> on 127.0.1.1 in the /etc/hosts file.]</em>

IceStorm is an event service, used to decouple publishers from subscribers. Typically, there is one IceStorm service per host. We create a separate directory for it to run in, copy a sample config file, create the database directory and start it up.
@verbatim
$ cd ~/sys; mkdir icestorm; cd icestorm
$ cp [ORCA2-SRC]/scripts/ice/icebox_icestorm.cfg .
$ mkdir stormdb
$ icebox --Ice.Config=icebox_icestorm.cfg
@endverbatim

@section orca_doc_quickstart_point Pointing Components at this Infrastructure

When an Orca component starts up, it needs to know how to find the services above. This information can go into config files for individual components.

Components in this tutorial use @c libOrcaIce, which looks up this information in a single file configuration file. Create a file @c ~/.orcarc (in your home directory) and place this text into it:
@verbatim
# Standard Ice Configuration for Orca
Ice.Default.Locator=IceGrid/Locator:default -p 12000
IceStorm.TopicManager.Proxy=IceStorm/TopicManager:default -p 10000
@endverbatim
(modify appropriately if this differs from your system setup)


@section orca_doc_quickstart_talk Getting Two Components Talking

Now will connect a fake laser component to a laser monitoring component. First, copy default configuration files for the Laser2d and LaserMon components.
@verbatim
$ cd ~/sys; mkdir quickstart; cd quickstart
$ cp [ORCA2-INSTALL]/cfg/laser2d.cfg .
$ cp [ORCA2-INSTALL]/cfg/lasermon.cfg .
@endverbatim

@par The Server

Configure the laser for fake (simulated) operation (or skip this step if you're connected to a real SICK laser).  Edit @c laser2d.cfg, and replace @c 'sickcarmen' with @c 'fake' so it looks like this:

@verbatim
Laser2d.Config.Driver=fake
@endverbatim

Start the Laser2d component.

@verbatim
$ laser2d laser2d.cfg
@endverbatim

@par The Client

Start a new shell, go to the quickstart directory and fire up the LaserMon component (a laser monitor). No modifications are needed for its configuration file. Note that the name of the configuration file is not specified and it is assumed to be @c lasermon.cfg. By default, all Orca components assume @c componentname.cfg as an argument if nothing is specified.

@verbatim
$ lasermon
@endverbatim

You should see the scans scroll by on the screen. Congratulations, your first two components are talking! 

To stop components, type @c Ctrl-C.

If something does not work, check out the FAQ on <a href="http://wiki2.cas.edu.au/orca/index.php/" target="_blank">Orca Wiki</a>.

@section orca_doc_quickstart_next What's Next

If everything works, check out more @ref orca_doc_tutorials.

*/
