/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@page orca_doc_tute_perf_test Testing Orca Latencies

@note Reviewed for release 2.0.0.

In this tutorial we show how to use two utilities to measure communication latencies. The utilities are @ref orca_test_pinger and @ref orca_test_replier. The results we produce will be similar to those shown in @ref orca_doc_performance.

We assume that the IceGrid registry is already running (see earlier tutorials on how to do this). Create a system directory and copy default configuration files.

@verbatim
$ cd ~/sys; mkdir perftest; cd perftest
$ cp [ORCA2-INSTALL]/cfg/replier.cfg .
$ cp [ORCA2-INSTALL]/cfg/pinger.cfg .
@endverbatim

@section orca_doc_tute_perftest_replier Start up Replier

We start the replier first.

@verbatim
$ replier
@endverbatim

@section orca_doc_tute_perftest_pinger Start up Pinger

Edit the configuration file @c pinger.cfg : change the number of pings from 101 to 5, so you don't have to wait a long time. You'll end up with something like this:

@verbatim
# Configuration Options
Pinger.Config.Count=5
# Valid values: { "sequence", "class", "iceping" }
Pinger.Config.Driver=sequence
Pinger.Config.Interval=0.250
Pinger.Config.LogFileName=orcapingresults.dat
Pinger.Config.OperationType=2
Pinger.Config.Preload=1
@endverbatim

@verbatim
$ pinger
@endverbatim

The results are saved in a text file called @c orcapingresults.dat. Each line corresponds to multiple pings of the same data structure and contains the following:

@verbatim
SIZE RTT_MIN RTT_AVG RTT_MAX RTT_MDEV  RTT0 RTT1 RTT2 ... RTTN
@endverbatim

Where SIZE is the size of the data structure in bytes. RTT stands for Round-Trip Time and are stored in milliseconds. RTT_MDEV is standard deviation of the data set (currently not implemented). Note that the contents are similar to the output of UNIX ping. 

@section orca_doc_tute_perftest_replier Start up Replier

Now we can run the same test insde an IceBox. The IceBox configuration file is show below.

@verbatim
#
# Pinter/Replier IceBox configuration.
#

# Components need to know where to find IceStorm
# Separately, we tell IceStorm where to listen (see end of this file)
IceStorm.TopicManager.Proxy=IceStorm/TopicManager:default -p 10000

Ice.Warn.Connections=1
Ice.Trace.Network=0
Ice.Trace.Protocol=0
Ice.PrintAdapterReady=1

Ice.Override.Timeout=200

#
# The IceBox server endpoint configuration
# All services will share one communicator to allow take advantage of collocation
# (see UseSharedCommunicator option for individual services)
#
IceBox.ServiceManager.Endpoints=tcp -p 9998
# Load Replier first!
IceBox.LoadOrder=Replier Pinger

IceBox.Service.Replier=OrcaReplier:create --Ice.Config=replier.cfg
IceBox.UseSharedCommunicator.Replier=1

IceBox.Service.Pinger=OrcaPinger:create --Ice.Config=pinger.cfg
IceBox.UseSharedCommunicator.Pinger=1
@endverbatim

Copy it into a file called pingbox.cfg and start the IceBox like so:

@verbatim
$ icebox --Ice.Config=pingbox.cfg
@endverbatim


@section orca_doc_tute_perftest_next What's Next

If everything works, check out more @ref orca_doc_tutorials.

*/
