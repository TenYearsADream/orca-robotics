/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@page orca_doc_units Orca Units and Coordinate Systems

@note Reviewed for release 2.0.0.

@par Inter-Component Communication

All inter-component communication is done in S.I. units (<a href="http://physics.nist.gov/cuu/Units">Systeme International d'Unites, International
System of Units</a>).

@par Component Configuration

All component configuration is done in S.I. units with one \b exception: angular quantities are configured in degrees rather than radians, because humans generally think better in degrees.

@par Component Code

Internally, unless there is a good reason for doing
otherwise, S.I. units are used everywhere (including for angular
quantities).

@par Display

All quantities are displayed in S.I. units with one \b exception: angular quantities are displayed in degrees rather than radians, because humans generally think better in degrees.
    
@par Coordinate Systems

All angles are defined from -pi to pi, NOT 0 to 2pi.

There are two kinds of coordinate frames: frames that are
rooted in a global map, and a platform's local coordinate frame.

For worlds where the curvature of the earth is not important,
the global coordinate axes are defined as follows:

@image html global_frame.png

Angles are defined anti-clockwise from the x-axis, with zero
degrees along the x-axis.  The y-axis is at +90 degrees.  The
z-axis points up.

A local frame is defined as follows:

@image html local_frame.png

A robot or sensor looks down the x-axis, with the y-axis out
to its left.  The z-axis points up.  Zero degrees is directly in
front, with angles increasing to the left and decreasing to the
right.

*/
