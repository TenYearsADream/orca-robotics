/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2008 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_components
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@defgroup orca_component_faithlocaliser FaithLocaliser
@brief A simple component that produces localisation info from odometry


@par Provides

- @ref orca_interface_home
- @ref orca_interface_localise2d [FaithLocaliser.Provides.Localise2d]

@par Requires

- @ref orca_interface_odometry2d [FaithLocaliser.Requires.Odometry2d]

@image html faithlocaliser.png

@par Operation

This component takes odometry information and produces localisation information.
No filtering is performed: instead, the component trusts that the odometry is perfect,
and that it is reported in the global coordinate system.
For real robots, both of these assumptions will be incorrect.

The component is useful when working in simulation however.  For
example, odometry in the <a href=playerstage.sf.net>Stage</a>
simulator can be set to "gps" mode (ie perfect odometry, in the global
coordinate system). 

To do this if you are using stage's @c simple.world you need to add the following lines in the @c worlds/player.inc file

  @c localization @c "gps"
  
  @c localization_origin [0 0 0]

within the "define pioneer2dx position" braces


@par Configuration
None.

An example configuration file is installed into [ORCA-INSTALL-DIR]/share/orca/cfg/ directory.

@par Authors
Alex Brooks

*/

