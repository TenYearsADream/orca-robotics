/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Mathew Ridley, Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!
@ingroup orca_components
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@defgroup orca_component_gps Gps
@brief A hardware abstraction component for GPS receivers

@par Provides

- @ref orca_interface_home
- @ref orca_interface_gps [Gps.Provides.Gps]
- GpsTime @ref orca_interface_gps [Gps.Provides.GpsTime]
- GpsMapGrid @ref orca_interface_gps [Gps.Provides.GpsMapGrid]
- @ref orca_interface_status

@par Requires

- none

@image html gps.png

@par Drivers

- @b garmin @ref gps_garmin
- @b fake @ref gps_fake Useful for testing or if you don't have hardware or a simulator.

@par Operation

This component encapsulates a GPS receiver.

It can run either as a stand-alone component or an IceBox Service.

@par Features

- When subscribed to component, position will only be received
if the GPS receiver has a fix.
- When requesting position, the user should check that the timestamp 
is not out of date as the last known position will always be returned 
iresepective of the GPS receiver currently having a valid fix.
- an orca::DataNotExistException will be thrown if getData() etc. is called 
without a fix ever having been achieved.

@par Configuration

- @c Gps.Config.Driver (string)
    - See introduction.
    - Valid values: { "garmin", "fake" }
    - Default: "garmin"

- @c Gps.Config.StartEnabled (bool)
    - Enable the GPS on component initialisation?
    - Default: 1
    
- @c Gps.Config.ReportIfNoFix (bool)
    - Report values if there is no GPS fix?
        - 0: GPS doesn't provide any data when there is no fix
        - 1: positionType is 0, all other values are bogus
    - Default: 1    

Geometry

- @c Gps.Config.Offset (Frame2d) [m,m,deg]
    - Offset of the GPS antenna from the (arbitrarily defined) global coordinate system.
    - Format: x y orientation (space separated).
    - Default: [0.0 0.0 0.0]
    
- @c Gps.Config.AntennaOffset (Frame3d) [m,m,m,deg,deg,deg]
    - Offset of the GPS antenna from the vehicle's coordinate system.
    - Format: x y z roll pitch yaw (space separated)
    - Default: [0.0 0.0 0.0 0.0 0.0 0.0]

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@section gps_garmin Garmin driver

Uses Garmin serial impementation. Written for Garmin-GPS15L

@par Extra configuration

- @c Gps.Config.Garmin.Device (string)
  - The unix device to use
  - Default: "/dev/ttyS0"

- @c Gps.Config.Garmin.Baud (int)
    - Baud rate
    - Default: 4800
    
@section gps_fake driver
The fake driver can be used to spit out GPS coordinates which can be specified in the config file.
This is useful to test the displaying of GPS positions in a GUI for example. The configured positions 
are served in a ring-like fashion, i.e. 0,1,2,3,0,1,2,...

@par Extra configuration

- @c Gps.Config.FakeDriver.Latitude<X> (double)
  - Latitude of GPS coordinate <X> (starting with 0)
  - Default: -35.0

- @c Gps.Config.FakeDriver.Longitude<X> (double)
  - Latitude of GPS coordinate <X> (starting with 0)
  - Default: 150.0
  
Another feature for debugging is that the fakedriver 'pretends' not to have a fix for the first
five timesteps. Useful for testing whether clients catch remote exceptions.

@par Authors
Duncan Mercer,
Matthew Ridley,
Tobias Kaupp

*/

