/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2008 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!
@ingroup orca_components
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@ingroup orca_win
@defgroup orca_component_imageserver ImageServer
@brief An abstract component for image serving 

@par Provides

- @ref orca_interface_home
- @ref orca_interface_image [ImageServer.Provides.Image]
- @ref orca_interface_status

@par Requires

- none

@image html imageserver.png

@par Drivers

This component dynamically loads an implementation of a Hydro hardware interface hydrointerfaces::LaserScanner2d. You can also load your own implementation as long as the shared library is in the path. See Hydro documentation for the list of available drivers.

- @ref hydro_drivers_image

@par Operation

This component encapsulates a SICK Laser Range-Finder (see @ref how_sick_works ). It can run either as a stand-alone component or an IceBox Service.

@par Configuration

- @c Image.Config.DriverLib (string)
    - Name of shared library containing the hardware driver
    - Valid values are at least: { 'libHydroImageFile.so', 'libHydroImageFake.so'}
    - Default: "libHydroImageFake.so"

Laser Settings
- @c Image.Config.ImageWidth (int) [pixels]
    - Valid Values: ImageWidth>0
- @c Laser2d.Config.ImageHeight (int) [pixels]
    - Valid Values: ImageHeight>0
    - Example: a laser mounted upside down with now translation: "0.0 0.0 0.0  180.0 0.0 0.0"

@see Individual drivers may have additional configuration parameters which are specified as Laser2d.Config.XXX. See driver documentation.

An example configuration file is installed into [ORCA-INSTALL-DIR]/share/orca/cfg/ directory.

@section internal Internal Structure
    
@image html image_whitebox.png

For developers: the code conforms to the basic approach described in the notes on @ref orca_doc_devcomp.

@section Notes

Only the fake driver will build for Windows.

@par Authors

Alex Brooks, Tom Burdick, Tobias Kaupp, Alex Makarenko

*/

