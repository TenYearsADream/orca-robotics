/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2006 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!
@ingroup components
@ingroup apps
@ingroup services
@ingroup cpp
@ingroup linux
@defgroup orca_component_imageserver ImageServer
@brief A hardware abstraction component for grabbing images from either a FireWire or USB camera

WARNING: This component has been turned off by default. If you have the cvs version of opencv-0.9.7, you can turn this component back on by running ccmake and manually switching this component ON.

The reason for turning it off is that there is no way of checking that you have the cvs or release version of opencv. This component needs some of the functionality of the cvs version which is not available in the release.

@par Provides

- @ref orca_interface_camera
- @ref orca_interface_home
- @ref orca_interface_status

@par Requires

- none

@par Drivers

- @b monoopencv @ref orca_camera_monoopencv
- @b digiclops @ref orca_camera_digiclops - NOTE: NOT VERY FUNCTIONAL YET
- @b fake Useful for testing or if you don't have hardware or a simulator.

This component encapsulates an image grabber for usb and firewire cameras. It can run either as a stand-alone component or an IceBox Service.

@see @ref orca_component_imageviewer

@par Configuration

- @c Camera.Config.Driver (string)
    - Which hardware driver to use?
    - Valid values: { "monoopencv", "fake", "digiclops" }
    - Default: "fake"

Camera Settings

- @c Camera.Config.StartEnabled (bool)
    - Enable the camera on component initialisation?
    - Default: 1

- @c Camera.Config.Format (string)
    - What format are the images? Most formats can be detected automatically so nothing is needed here. However, if images are Bayer encoded one of the following values need to be specified:
    - Valid values: { "BAYERBG", "BAYERGB", "BAYERRG", "BAYERGR" }
    - If a digiclops is being used you must specify either {"DIGICLOPSSTEREO", "DIGICLOPSRIGHT", "DIGICLOPSBOTH"}
    - "DIGICLOPSSTEREO" is used if a STEREO_IMAGE is being sent, "DIGICLOPSRIGHT" for RIGHT_IMAGE and "DIGICLOPSBOTH" for RIGHT_IMAGE and STEREO_IMAGE
    - Default: "MODENFI"

Geometry

- @c Camera.Config.Offset (Frame3d) [m, deg]
    - Position of the camera with respect to the robot's local coordinate system
    - Format: x y z pitch roll yaw
    - Example: a camera mounted upside down with no translation: "0.0 0.0 0.0  0.0 180.0 0.0"

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

<br>

@section orca_camera_monoopencv Monocular OpenCv Camera driver

Drives real camera hardware, directly connected to the computer. Uses
<a href="http://opencvlibrary.sourceforge.net/#head-02b4549cdc57cb10f8250a7ae860d5f21a6eae78" target="_blank">Opencv-0.9.7 from cvs</a>. See Dependencies below.

A firewire camera or usb camera can be used. The opencv implementation
automatically finds the type of camera. If you have any troubles with not being able to grab images with a firewire camera, it may be the dc1394 libraries playing up. Try typing @c sudo @c renew_1394 at a prompt and trying the running the component again. Also you could check that <a href="http://damien.douxchamps.net/ieee1394/coriander/index.php">coriander</a> works. 

<br>

@section orca_camera_digiclops Trinocular Digiclops Camera driver

NOTE: NOT VERY FUNCTIONAL YET. Will grab images (a digiclops STEREO_IMAGE only at the moment).

Drives a digiclops camera, directly connected to the computer. 
  
<br>

@par Dependencies

The @ref orca_camera_monoopencv requires that <a href="http://opencvlibrary.sourceforge.net/#head-02b4549cdc57cb10f8250a7ae860d5f21a6eae78" target="_blank">Opencv-0.9.7 from cvs</a> is installed. The @b cvs @b version has
a lot more functionality for image grabbing which we think is useful
enough that the cvs version should be used rather than the release. 

Recent compilation problems with the cvs version of opencv have been discovered due to python-dev packages not being checked for by autoconf. If you are using Debian, please install the python2.3-dev package. For other operating systems, please check that you have the headers for python installed in a standard system directory.

The @ref orca_camera_digiclops requires that
the digiclops and triclops libraries ( provided by the digiclops
suppliers, <a href="http://www.ptgrey.com" target="_blank">Point
Grey</a>) are installed either in @c
/usr/lib or in @c /usr/local/lib. It also requires that the digiclops
headers are in @c /usr/local/include/digiclops/ and similarly
for the triclops libraries @c /usr/local/include/triclops/.

The easiest way to install these libraries and headers are to copy them from the original directory. This code has been tested with Digiclops version 2.3.1.4-FC3 and Triclops version 3.2.0.8-FC3 on a Debian installation.


@par Todo
- The imagegrabber sublibrary should accept a camera index for specifying the particular camera to use on the firewire bus. At the moment the first camera found is used. 
- Digiclops grabber is in its very early stages and much of the functionality in the digiclops and triclops libraries haven't been implemented yet.

@par Authors

Ben Upcroft

*/

