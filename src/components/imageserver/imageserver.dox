/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2006 Alex Brooks, Ben Upcroft
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!
@ingroup components
@ingroup apps
@ingroup services
@ingroup cpp
@ingroup linux
@defgroup orca_component_imageserver ImageServer
@brief A hardware abstraction component for grabbing images from either a FireWire or USB camera

WARNING: This component has been turned off by default. If you have the <a href="http://opencvlibrary.sourceforge.net/#head-02b4549cdc57cb10f8250a7ae860d5f21a6eae78" target="_blank"> cvs version of opencv-0.9.7</a>, you can turn this component back on by running ccmake and manually switching this component ON.

The reason for turning it off is that there is no way of checking that you have the cvs or release version of opencv. This component needs some of the functionality of the cvs version which is not available in the release.

@par Provides

- @ref orca_interface_camera
- @ref orca_interface_home
- @ref orca_interface_status

@par Requires

- none

@par Drivers

- @b monoopencv @ref orca_camera_monoopencv
- @b digiclops @ref orca_camera_digiclops - NOTE: NOT VERY FUNCTIONAL YET
- @b fake Useful for testing or if you don't have hardware or a simulator.

This component encapsulates an image grabber for usb and firewire cameras. It can run either as a stand-alone component or an IceBox Service.

@see @ref orca_component_imageviewer

@par Configuration

- @c Camera.Config.Driver (string)
    - Which hardware driver to use?
    - Valid values: { "monoopencv", "fake", "digiclops" }
    - Default: "fake"

Camera Settings

- @c Camera.Config.StartEnabled (bool)
    - Enable the camera on component initialisation?
    - Default: 1

- @c Camera.Config.Format (string)
    - What format are the images? Most formats can be detected automatically so nothing is needed here. However, if images are Bayer encoded one of the following values need to be specified:
    - Valid values: { "BAYERBG", "BAYERGB", "BAYERRG", "BAYERGR" }
    - If a digiclops is being used you must specify either {"DIGICLOPSSTEREO", "DIGICLOPSRIGHT", "DIGICLOPSBOTH"}
    - "DIGICLOPSSTEREO" is used if a STEREO_IMAGE is being sent, "DIGICLOPSRIGHT" for RIGHT_IMAGE and "DIGICLOPSBOTH" for RIGHT_IMAGE and STEREO_IMAGE
    - Default: "MODENFI"

Geometry

- @c Camera.Config.Offset (Frame3d) [m, deg]
    - Position of the camera with respect to the robot's local coordinate system
    - Format: x y z pitch roll yaw
    - Example: a camera mounted upside down with no translation: "0.0 0.0 0.0  0.0 180.0 0.0"

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

Other examples for @c imageserver, @c imageviewer, @c logger, @c logplayer can be found at @ref orca_component_imageserver_examples


<br>

@par Dependencies

See @ref orca_camera_monoopencv_dependencies and @ref orca_camera_digiclops_dependencies for individual driver requirements. 

<br>

@par Help and FAQ

1. @ref orca_component_imageserver_firewire

2. Ice is throwing the following exception

@verbatim
IceUtil::Thread::run(): uncaught exception: TcpTransceiver.cpp:217: Ice::ConnectionLostException:
connection lost: recv() returned zero
@endverbatim

Ice has a default maximum object size that can be communicated between components of 1024 bytes. If the images from the camera exceed this limit you must add in the following extra configuration line to @b both the @c imageserver.cfg and @c icebox_icestorm.cfg files:

@verbatim
...
Ice.MessageSizeMax=3000
@endverbatim

Remember to add this line to all configuration files that will be communicating images. So if you're logging or replaying a log you will have to add this line to @c logger.cfg and @c logplayer.cfg as well.

<br>

@par Performance

This code has @b not been optimised and there are surely areas that can be fixed up. The numbers below were obtained for YUV images (640x480) grabbed from a Sony firewire camera capable of a framerate at 30Hz. The @c imageserver sent images to @c imageviewer on the same host but as stand-alone components. The tests were performed on a 1.5GHz Pentium M laptop.

- Delay = 30ms: The time for one image once it had been grabbed and before it was loaded as an orca object to the time just before the @c imageviewer displayed it on screen was on average 30ms.
   
- Throughput = 18Hz: The number of images per second arriving at @c imageviewer was 30.

- CPU usage (@c imageserver) = 20%: Measured using @c top . The CPU usage of @c icestorm was 20%.

The following performance figures were tested on a digiclops camera sending stereo images (an image from each camera):

- Throughput = 0.5Hz at 1024x768 resolution and 6Hz at 512x384 resolution

<br>

@par Todo

- The imagegrabber sublibrary should accept a camera index for specifying the particular camera to use on the firewire bus. At the moment the first camera found is used. 
- Digiclops grabber is in its very early stages and much of the functionality in the digiclops and triclops libraries haven't been implemented yet.

<br>

@par Authors


Ben Upcroft

*/

