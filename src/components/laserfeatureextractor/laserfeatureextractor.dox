/*
 *  Orca Project: Components for robotics.
 *
 *  Copyright (C) 2004-2006
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/*!
@ingroup components
@ingroup apps
@ingroup services
@ingroup cpp
@ingroup linux
@defgroup orca_component_laserfeatureextractor LaserFeatureExtractor

@brief Extracts interesting features from laser scans

@par Provides

- @ref orca_interface_home
- @ref orca_interface_polarfeature2d
- @ref orca_interface_status

@par Requires

- @ref orca_interface_laser

The component receives features from laser scans, useful for navigation. Types of features extracted:

- reflectors: anything with high reflectivity
- foreground points: things like poles or trees
- corners: internal and external corners eg. of buildings
- doors: gaps in walls of a certain width


@par Configuration

The configuration documentation is split into sections for each feature type

Reflectors

- @c LaserFeatureExtractor.Config.ExtractReflectors (bool)
    - Default: true
- @c LaserFeatureExtractor.Config.Reflectors.MaxDeltaRangeNearReflector (float) [m]
    - Don't extract a feature if there's a jump in the ranges > this threshold
      near the reflector.
      This reject spurious reflectors that are partially-obscured behind a foreground obstacle.
      It also reduces the angles about which a reflector on a corner can be extracted.
    - Default: 0.5
- @c LaserFeatureExtractor.Config.Reflectors.MaxDeltaRangeWithinReflector (float) [m]
    - A reflector that includes a jump in range > this threshold will be ignored.
      Default: 0.3
- @c LaserFeatureExtractor.Config.Reflectors.MinBrightness (int)
    - minimum intensity value to be considered a feature
    - Default: 1

Foreground Points

- @c LaserFeatureExtractor.Config.ExtractForegroundPoints (bool)
    - boolean
    - Default: 0
- @c LaserFeatureExtractor.Config.FGPoints.MinForegroundWidth (float) [m]
    - minimum width of poles/trees
- @c LaserFeatureExtractor.Config.FGPoints.MaxForegroundWidth (float) [m]
    - maximum width of poles/trees
- @c LaserFeatureExtractor.Config.FGPoints.MinForegroundBackgroundSeparation (float) [m]
    - how far the pole/tree must be from the background

Corners

- @c LaserFeatureExtractor.Config.ExtractCorners (bool)
    - Default: 0
    
Doors

- @c LaserFeatureExtractor.Config.ExtractDoors (bool)
    - Default: 0

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Authors
Alex Brooks (algorithm), Tobias Kaupp (port from Orca1)

*/

