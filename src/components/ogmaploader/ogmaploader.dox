/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!
@ingroup components
@ingroup apps
@ingroup cpp
@ingroup linux
@ingroup qnx
@defgroup orca_component_ogmaploader OgMapLoader
@brief Serves an occupancy grid map which is loaded from an image file.

@par Provides

- @ref orca_interface_home
- @ref orca_interface_ogmap [OgMapLoader.Provides.OgMap]
- @ref orca_interface_status

@par Requires

- none

@image html ogmaploader.png

@par Drivers

- @b fake Serves a bogus made-up map.
- @b file Loads an occupancy grid map from a file.

@par Operation

Supportes file types are:

- most image formats
    - anything qt can load: @c .png @c .bmp @c .jpg @c .jpeg @c .ppm @c .xbm @c .xpm
- ICE stream files 
    - file extension: @c .bin
    - these files can be generated using @ref orca_util_orcaview2d

Clients who wish to receive the map should call getData(). This component will only ever issue one update to subscribers: on initialisation.

@par Configuration

- @c OgMapLoader.Config.Driver (string)
    - Which map loader to use
    - Valid values: { "file", "fake" }
    - Default: "file"

- @c OgMapLoader.Config.Filename (string)
    - The name (and path) of the image to load
    - Default: "mapfile.png"

- @c OgMapLoader.Config.Negate (bool)
    - Whether increasing pixel value represents increasing occupancy probability
    - Valid Values:
            - 0: black is occupied, white is empty
            - 1: white is occupied, black is empty
    - Default: 0
    
- @c OgMapLoader.MapType (int)
    - Used to determine what the served ogMap represents
    - Values: 0:occupancy, 1:hazard, 2:motion, user-defined integers can be assigned
    - Default: 0

Map Geometry (see @ref orca_interface_ogmap for a detailed explanation)

Note: These parameters have @b no effect on maps loaded from ICE stream files. Those files contain all relevant information already.

World Size (float,float) [m]
- @c OgMapLoader.Config.Size.X
- @c OgMapLoader.Config.Size.Y

Map Origin (float,float,float) [m,m,deg]
- @c OgMapLoader.Config.Origin.X
- @c OgMapLoader.Config.Origin.Y
- @c OgMapLoader.Config.Origin.Orientation

For example, these configuration settings work for the Player's famous @c cave world:
@verbatim
OgMapLoader.Config.Driver=file
OgMapLoader.Config.MapFileName=cave.png
OgMapLoader.Config.Negate=0
OgMapLoader.Config.Origin.Orientation=0.0
OgMapLoader.Config.Origin.X=-8.0
OgMapLoader.Config.Origin.Y=-8.0
OgMapLoader.Config.Size.X=16.0
OgMapLoader.Config.Size.Y=16.0
@endverbatim

@section deps Dependancies

- Qt GUI library >= v.4.1

@section developer Responsible Developer
Tobias Kaupp (t.kaupp at cas.edu.au)
  
*/

