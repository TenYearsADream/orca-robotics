/*
 *  Orca Project: Components for robotics.
 *
 *  Copyright (C) 2004-2006
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*!

@ingroup components
@ingroup apps
@ingroup cpp
@ingroup linux
@defgroup orca_component_orcamon OrcaMon
@brief Connects the specified proxy and subscribes to data updates.

@par Provided Interfaces

- @ref orca_interface_home

@par Required Interfaces (one of)

- @ref orca_interface_laser
- @ref orca_interface_position2d
- @ref orca_interface_power
- @ref orca_interface_status

The type of the remote object is determined dynamically at the time of connection.

The implementation relies on the fact that:

-# all supported interfaces have operations named @c getData and @c subscribe, and
-# all corresponding consumer interfaces have an operation named @c setData.

@par Configuration
None.

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.


@par Developer
Alex Makarenko

*/

