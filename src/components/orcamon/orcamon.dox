/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2008 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_components
@ingroup orca_apps
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@defgroup orca_component_orcamon OrcaMon
@brief Connects the specified proxy and subscribes to data updates.

@par Provides

- @ref orca_interface_home

@par Requires (one of)

- @ref orca_interface_laserscanner2d [OrcaMon.Requires.Generic]
- @ref orca_interface_localise2d [OrcaMon.Requires.Generic]
- @ref orca_interface_ogmap [OrcaMon.Requires.Generic]
- @ref orca_interface_odometry2d [OrcaMon.Requires.Generic]
- @ref orca_interface_power [OrcaMon.Requires.Generic]
- @ref orca_interface_status [OrcaMon.Requires.Generic]

The type of the remote object is determined dynamically at the time of connection.

@par Configuration
None.

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Developer
Alex Makarenko

@par Implementation

The implementation relies on the fact that:

-# all supported interfaces have operations named @c getData and @c subscribe, and
-# all corresponding consumer interfaces have an operation named @c setData.

*/
