/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_components
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@defgroup orca_component_pathplanner PathPlanner
@brief Computes a path in a 2D occupancy grid map. 

The pathplanner acts like a service receiving tasks from third parties and returning a computed path in a 2D world represented by an occupancy grid map. An example for a third party is the @ref orca_component_pathplantester.

@par Provides

- @ref orca_interface_home
- @ref orca_interface_qgraphics2d [PathPlanner.Provides.SkeletonGraphics] (@ref orca_pathplanner_skeletonnav and @ref orca_pathplanner_sparseskeletonnav drivers only)
- @ref orca_interface_pathplanner2d [PathPlanner.Provides.PathPlanner2d]
- @ref orca_interface_status

@par Requires

- @ref orca_interface_ogmap [PathPlanner.Requires.OgMap]

@image html pathplanner.png

@par Drivers

- @b simplenav @ref orca_pathplanner_simplenav
- @b skeletonnav @ref orca_pathplanner_skeletonnav
- @b sparseskeletonnav @ref orca_pathplanner_sparseskeletonnav
- @b astar @ref orca_pathplanner_astar
- @b fake Useful for testing

@par Configuration

- @c PathPlanner.Config.Driver (string)
    - Type of algorithm driver
    - Valid values: { 'simplenav', 'skeletonnav', 'sparseskeletonnav', 'astar', 'fake' }
    - Default: 'sparseskeletonnav'

- @c PathPlanner.Config.TraversabilityThreshhold (double)
    - Everything below this threshhold is considered traversable, everything above is an obstacle
    - Valid values: [0.0;1.0]
    - Default: 0.6

- @c PathPlanner.Config.RobotDiameterMetres (double) [m]
    - The robot's diameter including some safety distance
    - Default: 0.8

- @c PathPlanner.Config.DoPathOptimization (bool)
    - Flag which determines whether an optimized path should be computed @ref orca_pathplanner_pathoptimization
    - Valid values: 0 or 1
    - Default: 0

- @c PathPlanner.Config.JiggleWaypointsOntoClearCells (bool)
    - If true, incoming paths will be fixed up by moving waypoints off of obstacles.
    - Valid values: 0 or 1
    - Default: 1

- @c PathPlanner.Config.Skeleton.Cost.DistanceThreshold (double)
    - (For skeleton-based path-planning only):
      - If a path causes the robot to clear an obstacle by less than
        DistanceThreshold, the cost of that portion of the path is multiplied
        by CostMultiplier.
      - Default: 0.3

- @c PathPlanner.Config.Skeleton.Cost.CostMultiplier (double)
    - (For skeleton-based path-planning only):
      - If a path causes the robot to clear an obstacle by less than
        DistanceThreshold, the cost of that portion of the path is multiplied
        by CostMultiplier.
      - Default: 10

- @c PathPlanner.Config.Skeleton.ProvideGraphics (bool)
    - (For skeleton-based path-planning only):
      - If true, provide a QGraphics2d interface showing the skeleton.
      - Default: 1

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Drivers

Drivers are listed below.  The quoted (approximate) speed of each
algorithm is for a Release build, for a single path segment on a
500x500-cell world.

@section orca_pathplanner_simplenav Simple navigation

This algorithm is described in Latombe, "Robot Motion Planning",
sec. 4.2.1. It is a simple grid-potential based method using wavefront
propagation. We added the consideration of the robot platform's size.

- Speed: 
  - No pre-computation required.
  - ~0.5sec to plan a path.

@section orca_pathplanner_skeletonnav Skeleton navigation 

This algorithm is described in Latombe, "Robot Motion Planning",
sec. 4.2.2. It computes an improved numverical navigation function by
first extracting a skeleton.  

- Speed: the current implementation is fairly slow.
  - ~0.3sec to pre-compute the skeleton.
  - ~0.2sec to plan a path.

@section orca_pathplanner_sparseskeletonnav Sparse Skeleton navigation

This algorithm uses the @ref orca_pathplanner_skeletonnav algorithm.
After generating a dense skeleton, it extracts a sparse set of nodes
and arcs between those nodes.  This is much faster to plan on.

- Speed:
  - ~1sec to pre-compute the skeleton.
  - <1ms to plan a path.
  
@par Note on diplaying skeletons

Both skeleton navigation algorithms can display the computed skeleton 
in @ref orca_util_orcaview2d using the @ref orca_interface_qgraphics2d 
interface. This is useful for debugging purposes. The skeleton is not part of the 
@ref orca_interface_pathplanner2d interface data.

@section orca_pathplanner_pathoptimization Path optimization algorithm

This algorithm takes a fine-grained path and tries to find shortcuts
by raytracing between waypoints. If no obstacle is in the way it will
discard all the waypoints in between. The path it computes contains
much fewer waypoints than the original path. A negative side-effect is
that the path gets close to the walls but the local navigation should
take care of this.

@section orca_pathplanner_astar A* search

This driver uses the famous A* search algorithm to guarantee the
shortest path from start to goal. The heuristic takes diagonal
traversing into account. Original implementation was done by Pham Ngoc
Hai (h dot pham at acfr.usyd.edu.au). 

- Speed:
  - No pre-computation required
  - To plan path: depends heavily on the particular path 
    - A* has known problems if it needs to 'fill up' a potential bowl.
    - Rough guide: ~10ms to ~10sec.

@par Notes

Bibtex reference to the LaTombe book which contains the
gridpotential-based algorithms (@ref orca_pathplanner_simplenav and
@ref orca_pathplanner_skeletonnav):

@verbatim
@Book{latombe91robot,
  author    =    {Jean-Claude Latombe},
  title =        {Robot Motion Planning},
  publisher =    {Kluwer Academic Publishers},
  year =         {1991}
}
@endverbatim

@par Authors

 - Tobias Kaupp
 - Sparse Skeleton Stuff: Alex Brooks

*/

