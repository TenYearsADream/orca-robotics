/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2008 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!
@ingroup orca_components
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@defgroup orca_component_robot2d Robot2d
@brief Controls a 2-D mobile robot.

@par Provides

- @ref orca_interface_home
- @ref orca_interface_odometry2d [Robot2d.Provides.Odometry2d]
- @ref orca_interface_velocitycontrol2d [Robot2d.Provides.VelocityControl2d]
- @ref orca_interface_status
- @ref orca_interface_tracer

@par Requires

- none

@image html robot2d.png

@par Drivers

- @b playerclient @ref orca_robot2d_playerclient
- @b fake Useful for testing or if you don't have hardware or a simulator.

@par Configuration

General Parameters:

  - @c Robot2d.Config.Driver (string)
    - Type of hardware driver
    - Valid values: { 'playerclient', 'fake' }
    - Default: 'playerclient'
    
  - @c Robot2d.Config.EnableMotion (bool)
    - Allow motion commands or not. Convinient for testing when you want to make sure that
      the platform will not move.
    - Default: 1
    
  - @c Robot2d.Config.Odometry2dPublishInterval (double) [s]
    - How often to send position information to the IceStorm server
    - Valid values:
        - t<0 : send every new data point
        - t>0 : send approximately every t seconds
    - Default: 0.1 (10Hz)

Parameters describing vehicle (see orca::VehicleDescription for details)

  - @c Robot2d.Config.VehicleDescription.Control.Type (string)
    - valid values: 'VelocityDifferential'
    - Default: 'VelocityDifferential'

  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxForwardSpeed (m/s)
    - Default: 1.0
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxReverseSpeed (m/s)
    - valid values: must be same as forward speed.
    - Default: 1.0
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxTurnrate (deg/s)
    - Absolute max turnrate (assumed max turnrate at 0m/s)
    - Default: 60.0
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxLateralAcceleration (m/s/s)
    - Max centripital acceleration during a turn (limits max turnrate at speed).
      - See @ref orca_interface_vehicleDescription
    - Default: 3.57
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxForwardAcceleration (m/s/s)
    - Default: 1.0
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxReverseAcceleration (m/s/s)
    - Default: 1.0
  - @c Robot2d.Config.VehicleDescription.Control.VelocityDifferential.MaxRotationalAcceleration (deg/s/s)
    - Default: 45.0
  - @c Robot2d.Config.VehicleDescription.PlatformToVehicleTransform (Frame3d) [m, deg]
    - Position of the vehicle's local coord system with respect to the platform's local coord system.
    - Format: x y z roll pitch yaw (space separated)
    - Default: 0.0 0.0 0.0  0.0 0.0 0.0
  - @c Robot2d.Config.VehicleDescription.Geometry.Type (string)
    - valid values: 'Cylindrical'
    - Default: 'Cylindrical'
  - @c Robot2d.Config.VehicleDescription.Geometry.Cylindrical.Radius (m)
    - Radius of the vehicle's bounding cylinder
    - Default: 0.25
  - @c Robot2d.Config.VehicleDescription.Geometry.Cylindrical.Height (m)
    - Height of the vehicle's bounding cylinder
    - Default: 1.0
  - @c Robot2d.Config.VehicleDescription.Geometry.Cylindrical.VehicleToGeometryTransform (Frame3d) [m, deg]
    - Position of the cylinder centre with respect to the vehicle's local coord system.
      (cylinder extends in +/- z direction from here)
    - Format: x y z roll pitch yaw (space separated)
    - Default: 0.0 0.0 0.0  0.0 0.0 0.0
  
An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Dependancies

None for the component. See driver sections below for individual driver dependencies.

@section orca_robot2d_playerclient Player Client driver

This driver wraps up a Player client which connects to Player's Position2d interface. As such it can be used as a quick-and-easy way to interact with virtually all robotic platforms supported by Player. Naturally, both real hardware and Stage simulator are supported. It requires a running Player server. The driver gets data from that server and converts it into Orca format.

@par Dependancies

Requires that Player/Stage v.>=2.0 are installed and running. As Player itself, this driver is Linux only. See our notes on installing Player in platform-dependent installation page, e.g. @ref orca_doc_installdebian_player.

@par Extra configuration

- @c Robot2d.Config.PlayerClient.Host (string)
    - The host that Player (or Stage) is running on
    - Default: "localhost"
- @c Robot2d.Config.PlayerClient.Port (int)
    - The port that PLayer (or Stage) is running on
    - Constraints: >0
    - Default: 6665

@section internal Internal Structure

@image html segwayrmp_whitebox.png

The implementation of Platform2d interface can raise orca::DataNotExistException but does NOT raise orca::HardwareFailedException.

@par Authors

Alex Makarenko.

*/

