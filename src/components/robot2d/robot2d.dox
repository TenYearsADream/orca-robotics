/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2006 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!
@ingroup components
@ingroup apps
@ingroup services
@ingroup cpp
@ingroup linux
@defgroup orca_component_robot2d Robot2d
@brief Controls a 2-D mobile robot.

@par Provides

- @ref orca_interface_home
- @ref orca_interface_platform2d [Robot2d.Provides.Platform2d]
- @ref orca_interface_status

@par Requires

- none

@par Drivers

- @b playerclient @ref orca_robot2d_playerclient
- @b fake Useful for testing or if you don't have hardware or a simulator.

@par Configuration

- @c Robot2d.Config.Driver (string)
    - Type of hardware driver
    - Valid values: { 'playerclient', 'fake' }
    - Default: 'playerclient'
    
- @c Robot2d.Config.EnableMotion (bool)
    - Allow motion commands or not. Convinient for testing when you want to make sure that
      the platform will not move.
    - Default: 1
    
- @c Robot2d.Config.MaxSpeed (double) [m/s]
    - Maximum allowed forward speed
    - Valid values: positive
    - Default: 1.0
    
- @c Robot2d.Config.MaxTurnrate (double) [deg/s]
    - Maximum allowed turnrate
    - Valid values: positive
    - Default: 60.0
    
- @c Robot2d.Config.Position2dPublishInterval (double) [s]
    - How often to send position information to the IceStorm server
    - Valid values:
        - t<0 : send every new data point
        - t>0 : send approximately every t seconds
    - Default: 0.1 (10Hz)

- @c Robot2d.Config.StatusPublishInterval (double) [s]
    - How often to send status information to the IceStorm server
    - Valid values:
        - t>0 : send approximately every t seconds
    - Default: 60.0

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Dependancies

None for the component. See driver sections below for individual driver dependencies.

@section orca_robot2d_playerclient Player Client driver

This driver wraps up a Player client which connects to Player's Position2d interface. As such it can be used as a quick-and-easy way to interact with virtually all robotic platforms supported by Player. Naturally, both real hardware and Stage simulator are supported. It requires a running Player server. The driver gets data from that server and converts it into Orca format.

@par Dependancies

Requires that Player/Stage v.>=2.0 are installed and running. As Player itself, this driver is Linux only. See our notes on installing Player in platform-dependent installation page, e.g. @ref orca_doc_installdebian_player.

@par Extra configuration

- @c Robot2d.Config.PlayerClient.Host (string)
    - The host that Player (or Stage) is running on
    - Default: "localhost"
- @c Robot2d.Config.PlayerClient.Port (int)
    - The port that PLayer (or Stage) is running on
    - Constraints: >0
    - Default: 6665

@section internal Internal Structure

@image html segwayrmp_whitebox.png

The implementation of Platform2d interface can raise orca::DataNotExistException but does NOT raise orca::HardwareFailedException.

@par Authors

Alex Makarenko.

*/

