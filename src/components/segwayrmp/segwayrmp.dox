/*!
  \defgroup segwayrmp SegwayRMP: A component for controlling Segway. (Status: beta)

  The Segwayrmp can provide odometry in any combination of the following forms:
    - RobotVelocity2D objects, 
    - Pose2D objects,
    - Pose3D objects.

  RobotVelocity2D provides measurements (as measured by wheel encoders
  or similar) of the robot's velocity and turn-rate.

  Pose2D provides measurements (as measured by wheel encoders
  or similar) of the robot's position: (x,y,heading).  Since the
  Segway doesn't know anything about a global frame of
  reference, the odometric Pose2D is in a local coordinate system;
  that is, the robot begins at (0,0,0) on initialization.

  Pose3D contains the same measurements as Pose2D, with the addition
  of the pose3D.pitch(): the tilt angle of the robot.  Pose3d.yaw() is
  the same as pose2d.heading().  Pose3d.roll() is not measured by the
  Segway, and is thus always reported as 0.0.

  Commands are given to the Segway using RobotVelocity2D objects.  3D
  objects are not appropriate because the Segway doesn't have direct
  control over its tilt angle.

  \section deps Dependancies
    - CAN bus. Segway component requires that CAN software be installed.  Currently, the only
      CAN interface that works is Kvaser's.
    - USB bus. Tested with libftd2xx.so.0.4.5. Get it from www.ftdichip.com

  \section config Configuration

  \section start Startup
  Example:

\verbatim
$ segwayrmp segwayrmp.xml
\endverbatim

  \section servers Servers
    Supported servers include:
    - For reading from the hardware:
      - ServerPush:Sender \<RobotVelocity2D\>
      - ServerPush:Sender \<Pose2D\>
      - ServerPush:Sender \<Pose3D\>
    - For writing to the hardware:
      - ClientPush:Sender \<RobotVelocity2D\>

  \section requiredInterfaces Required Interfaces
  None.

  \section remarks Remarks

  \section developer Responsible Developer
  Alex Brooks (a.brooks [at] cas.edu.au)

*/

