/*
 *  Orca-Base: Components for robotics.
 *
 *  Copyright (C) 2004
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*!
@ingroup components
@defgroup segwayrmp SegwayRMP
@brief A component for controlling Segway. (Status: beta)

The segwayrmp driver provides control of a Segway RMP (Robotic
Mobility Platform), which is an experimental robotic version of the
Segway HT (Human Transport), a kind of two-wheeled, self-balancing
electric scooter.

@par Provides

- @ref orca_interface_platform2d
- @ref orca_interface_power

@par Requires

- none

@par Dependancies
- CAN bus. Segway component requires that CAN software be installed.  Currently, the only
    CAN interface that works is Kvaser's.
- USB bus. Tested with libftd2xx.so.0.4.5. Get it from www.ftdichip.com

@par Notes

- Because of its power, weight, height, and dynamics, the Segway RMP is
a potentially dangerous machine.  Be @e very careful with it.

- Although the RMP does not actually support motor power control from 
software, for safety you must explicitly enable the motors using a
@p PLAYER_POSITION_MOTOR_POWER_REQ or @p PLAYER_POSITION3D_MOTOR_POWER_REQ
(depending on which interface you are using).  You must @e also enable
the motors in the command packet, by setting the @p state field to 1.

- For safety, this driver will stop the RMP (i.e., send zero velocities)
if no new command has been received from a client in the previous 400ms or so.
Thus, even if you want to continue moving at a constant velocity, you must
continuously send your desired velocities.

- Most of the configuration requests have not been tested.

- Currently, the only supported type of CAN I/O is "kvaser", which uses
Kvaser, Inc.'s CANLIB interface library.  This library provides access
to CAN cards made by Kvaser, such as the LAPcan II.  However, the CAN
I/O subsystem within this driver is modular, so that it should be pretty
straightforward to add support for other CAN cards.

@par Configuration

@include components/segwayrmp/segwayrmp.cfg

@par Authors
Alex Makarenko. Original driver code came from Player. The CAN driver is largely untouched, the USB driver is heavily modified.

*/

