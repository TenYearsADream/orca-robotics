/*
 * Orca-Robotics Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2009 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in
 * the LICENSE file included in this distribution.
 *
 */

/*!
@ingroup orca_components
@ingroup orca_apps
@ingroup orca_cpp
@ingroup orca_linux
@ingroup orca_qnx
@defgroup orca_component_systemstatusmon SystemStatusMon
@brief Connects to a SystemStatus interface and displays its information

Connects to a SystemStatus interface and displays its information in different formats

@see @ref orca_component_systemstatus

@par Provides

- @ref orca_interface_home

@par Requires

- @ref orca_interface_systemstatus

@image html systemstatusmon.png

@par Configuration

- @c SystemStatusMon.Config.DisplayType (string)
    - Which type of display to use
    - Valid values: { "colourtext", "simpletext" }
    - Default: "colourtext"

An example configuration file is installed into [ORCA-INSTALL-DIR]/share/orca/cfg/ directory.

@par Display Types

SimpleText
    - SystemStatusData is printed to the console in a "flat" representation

ColourText
    - SystemStatusData is shown as a table: rows are platforms in the system, columns show all components per platform
    - Each cell displays the observed state and health of a component.
    - In addition, a human-readable message is displayed.
    - The key to interpret the display:
        - Health (expressed by colour):
            - green: ok
            - yellow: warning
            - red: fault
            - black: stalled
            - grey: stale
        - State (expressed by symbols): 
            - @c '!': inactive
            - @c '^': connecting
            - @c '-': initialising
            - @c ' ': active
            - @c 'v': finalising
         - An exception to the rule above is that the display is always gray when state==inactive or state==finalising.

@par Authors

Tobias Kaupp   

*/
