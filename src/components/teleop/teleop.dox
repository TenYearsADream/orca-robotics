/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!
@ingroup components
@ingroup apps
@ingroup cpp
@ingroup linux
@ingroup qnx
@defgroup orca_component_teleop Teleop
@brief Teleoperational control from a keyboard or joystick.

This component connects to a robot base and issues motion commands according to user input from a keyboard or joystick.

@par Provides

- @ref orca_interface_home

@par Requires (one of)

- @ref orca_interface_velocitycontrol2d [Teleop.Requires.Generic]
- @ref orca_interface_drivebicycle [Teleop.Requires.Generic]
- @ref orca_interface_platform2d [Teleop.Requires.Generic]

@image html teleop.png

@par Input Drivers

- @b keyboard @ref orca_teleop_keyboard
- @b joystick @ref orca_teleop_joystick

@par Configuration

- @c Teleop.Config.DisplayDriver (string)
    - Which input driver to use
    - Valid values: { "term-iostream", "term-ncurses" }
    - Default: "term-iostream"

- @c Teleop.Config.InputDriver (string)
    - Which input driver to use
    - Valid values: { "keyboard, "joystick" }
    - Default: "keyboard"

- @c Teleop.Config.RepeatInterval (float) [s]
    - Time interval before a repeat command is sent in the absence of a new command.
    - Default: 0.1
    - Valid values:
        - t<0: Only new commands are sent
        - t=0: Commands are sent as frequently as possible (terribly inefficient)
        - t>0: Commands are sent when new ones are entered, or resent after t seconds (useful if "keep alive" heartbeat is needed).

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Dependancies

None for the component. See driver sections below for individual driver dependencies.

@section orca_teleop_keyboard Keyboard Driver using termio.h

Motion commands are issued by pressing keyboard keys. The meaning of "forward motion" and "turn" are interpreted differently depending on which interface we are connected to (see Output drivers below)
- i : increment "forward motion"
- k : decrement "forward motion"
- j : increment "turn"
- l : decrement "turn"
- u : stop turn
- o : stop movement (but still turn)
- anything else : stop

@par Additional Configuration

- @c Teleop.Keyboard.StepInputs (bool)
    - If set to 1, excepts numeric commands which are interpreted as step changes in speed. For example,
      pressing 1 results in step to 10% of maximum speed, 2 to 20%, 9 to 90%, and 0 to 100%.
    - Default: 0

@section orca_teleop_joystick Joystick Driver

Motion commands are issued by moving the joystick. The meaning of "forward motion" and "turn" are interpreted differently depending on which interface we are connected to (see Output drivers below)
- forward     : set "forward motion"
- backward    : set "forward motion"
- left        : set left "turn"
- right       : set right "turn"
    
@par Additional Configuration

- @c Teleop.Config.Joystick.Device (string)
    - Unix path to the joystick device, or "auto" to have teleop search for a joystick.
    - Default: "auto"
    - Example: "/dev/input/event0"

@par Operation

If using a joystick then TeleopControl requires either a <A HREF="http://kernel.org">Linux Kernel</A> >= 2.4 or the <A HREF="http://linuxconsole.sourceforge.net/input/input.html">Linux Input Drivers</A> . If the driver is built as a module you may have to load it. Check with command <code>lsmod</code> and add module with <code>modprobe</code>. This Orca driver has only been tested with kernel >=2.6.12.

- Make sure you're using the correct event device. Get a list of available devices and find the one corresponding to your joystick.
@verbatim
$ cat /proc/bus/input/devices
@endverbatim

- Other things that can go wrong:
- Make sure that your event devices exist and can be read, i.e. ensure that you have permissions to /dev/input/event*, eg with:
@verbatim
# chmod 666 /dev/input/event*
@endverbatim
    - (note that these permissions may get over-written on reboot...)
    - if not enough exist, make them with:
@verbatim
# mknod c event0 13 64
# mknod c event1 13 65
# mknod c event2 13 66
# mknod c event3 13 67
@endverbatim

- There are some problems with USB1.0 joysticks and older kernels.
    If your USB system hangs, try upgrading.  Kernel 2.6.12 seems to be OK.

@section orca_teleop_velocitycontrol2d Output driver for VelocityControl2d interface

Connects to a VelocityControl2d interface. "Forward motion" is translated to speed. "Turn" is translated to turnrate.

@par Additional Configuration


- @c Teleop.Config.VelocityControl2d.MaxSpeed (double) [m/s]
    - The maximum absolute linear speed which the component will send out
    - Default: 1.0

- @c Teleop.Config.VelocityControl2d.MaxSideSpeed (double) [m/s]
    - The maximum absolute linear side speed which the component will send out
    - Default: 1.0

- @c Teleop.Config.VelocityControl2d.MaxTurnRate (double) [deg/s]
    - The maximum absolute rotational speed which the component will send out
    - Default: 40.0

- @c Teleop.Config.VelocityControl2d.SpeedIncrement (double) [m/s]
    - For input devices which allow command increments (keyboard), by how much the speed will change for each input.
    - Default: 0.05

- @c Teleop.Config.VelocityControl2d.TurnRateIncrement (double) [deg/s]
    - For input devices which allow command increments (keyboard), by how much the turn rate will change for each input.
    - Default: 2.0

@section orca_teleop_velocitycontrol2d Output driver for DriveBicycle interface

Connects to a DriveBicycle interface. "Forward motion" is translated to speed. "Turn" is translated to steer angle.

@par Additional Configuration


- @c Teleop.Config.DriveBicycle.MaxSpeed (double) [m/s]
    - The maximum absolute linear speed which the component will send out
    - Default: 1.0

- @c Teleop.Config.DriveBicycle.MaxSteerAngle (double) [deg]
    - The maximum absolute steer angle which the component will send out
    - Default: 45.0

- @c Teleop.Config.DriveBicycle.SpeedIncrement (double) [m/s]
    - For input devices which allow command increments (keyboard), by how much the speed will change for each input.
    - Default: 0.05

- @c Teleop.Config.DriveBicycle.SteerAngleIncrement (double) [deg]
    - For input devices which allow command increments (keyboard), by how much the steer angle will change for each input.
    - Default: 5.0

@section internal Internal Structure

@note This diagram is obsolete!
    
@image html teleop_whitebox.png

@par Authors

Alex Makarenko    

*/
