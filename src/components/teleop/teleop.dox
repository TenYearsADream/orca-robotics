/*
 *  Orca Project: Components for robotics.
 *
 *  Copyright (C) 2004-2006
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public
 *  License along with this library; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/*!
@ingroup components
@ingroup apps
@ingroup cppcomps
@ingroup linuxcomps
@defgroup orca_component_teleop Teleop
@brief This component provides teleoperational control from a keyboard or joystick.

This component connects to a robot base or waypoint server and issues motion commands according to user input from a keyboard or joystick. Development status Beta

@image html teleop_blackbox.png

@par Provides
    - none

@par Requires
    - @ref orca_interface_platform2d

@par Drivers
    - [keyboard] Keyboard
    - [joystick] Joystick
    - [fake] Simulated output

@par Configuration
    - Teleop.Config.Driver
        - Which input driver to use
        - Use: optional, default = "keyboard"
        - Constraints:
            - Type: string
            - Valid Values: [keyboard | joystick | fake]

    - Teleop.Config.MaxSpeed
        - The maximum absolute linear speed which the component will allow
        - Units: metres per second
        - Use: optional, default = "1.0"
        - Constraints:
            - Type: float

    - Teleop.Config.MaxTurnrate
        - The maximum absolute rotational speed which the component will allow
        - Units: degrees per second
        - Use: optional, default = "40.0"
        - Constraints:
            - Type: float

    - Teleop.Config.RepeatTime
        - Time interval before a repeat command is sent in the absence of a new command.
        - Units: second
        - Use: optional, default = "0.2"
        - Constraints:
            - Type: float
            - Valid values: 
                - t<0: Only new commands are sent
                - t=0: Commands are sent as frequently as possible (terribly inefficient)
                - t>0: Commands are sent when new ones are entered, or resent after t seconds (useful if "keep alive" heartbeat is needed).

Here's a complete sample of a config file:
@include components/teleop/teleop.def

@par Internal Structure
    
@image html teleop_whitebox.png

@par Responsible Developer
Alex Makarenko

@section keyboard Keyboard Driver

Motion commands are issued by pressing keyboard keys.
    i : forward
    j : left
    l : right
    k : backward
    u : stop turn
    o : stop movement (but still turn)
    anything else : stop

@section joystick Joystick Driver

@par Troubleshooting

This section has not been updated for Orca2!

If using a joystick then TeleopControl requires either a <A HREF="http://kernel.org">Linux Kernel</A> >= 2.4 or the <A HREF="http://linuxconsole.sourceforge.net/input/input.html">Linux Input Drivers</A> .  If the driver is built as a module you may have to load it. Check with command @code lsmod and add module with @code modprobe.

- Make sure you're using the correct event device. To see which ones are available:
@verbatim
$ cat /proc/bus/input/devices
@endverbatim

- Other things that can go wrong:
- Make sure that your event devices exist and can be read:
    - ie ensure that you have permissions to /dev/input/event*, eg with:
@verbatim
$ sudo chmod 666 /dev/input/event*
@endverbatim
    - (note that these permissions may get over-written on reboot...)
    - if not enough exist, make them with:
@verbatim
$ sudo mknod c event0 13 64
$ sudo mknod c event1 13 65
$ sudo mknod c event2 13 66
$ sudo mknod c event3 13 67
@endverbatim
- There are some problems with USB1.0 joysticks and older kernels.
    If your USB system hangs, try upgrading.  Kernel 2.6.10 seems to be OK.

*/

