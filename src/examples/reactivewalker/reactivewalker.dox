/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alex Brooks, Alexei Makarenko, Tobias Kaupp
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_examples
@ingroup orca_apps
@ingroup orca_services
@ingroup orca_cpp
@ingroup orca_linux
@defgroup orca_component_reactivewalker ReactiveWalker
@brief Makes reactive motion control decisions based on odometry and laser scans.

@par Provided Interfaces

- @ref orca_interface_home
- @ref orca_interface_status
- @ref orca_interface_tracer

@par Required Interfaces

- @ref orca_interface_laserscanner2d
- @ref orca_interface_odometry2d
- @ref orca_interface_velocitycontrol2d

@image html reactivewalker.png

@par Drivers

- @b random @ref orca_component_reactivewalker_random
- @b fake Useful for testing or if you don't have hardware or a simulator.

Implements simple reactive behaviors for mobile robotic platforms. The behavior depends on the chosen driver.

@par Configuration

- @c RandomWalker.Config.Driver (string)
    - Type of algorithm driver
    - Valid values: { 'random', 'fake' }
    - Default: 'random'

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@section orca_component_reactivewalker_random  Random walk

A port of Player's famous randomwalk example.

@par Authors
Alex Makarenko

*/

