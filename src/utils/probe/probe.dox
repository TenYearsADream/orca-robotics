/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alexei Makarenko
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_utils
@ingroup orca_cpp
@ingroup orca_linux
@defgroup orca_util_probe Probe
@brief A tool to browse and probe remote Orca interfaces.

@par Development status

@b Experimental

@par Provides

- none

@par Requires

- @ref orca_interface_home

@par Drivers

- @b iostream @ref orca_probe_iostream
- @b iostream @ref orca_probe_qt

@par Operation

This utility connects to the registry and gets a list of components. The user can then select an component and get a list of its interfaces (if Home interface is available). Then choose an interface (if supported by Probe) and get a list of operations. Choose an operation to call, e.g. getData(). 

This utility loads plug-in libraries containing a @e probe per interface. Custom probes can be supplied with external factory libraries. The default library which comes with the Orca distribution supports the following interfaces:
- @ref orca_interface_binaryswitch
- @ref orca_interface_camera
- @ref orca_interface_cpu
- @ref orca_interface_drivebicycle
- @ref orca_interface_gps
- @ref orca_interface_home
- @ref orca_interface_laserscanner2d
- @ref orca_interface_localise2d
- @ref orca_interface_localise3d
- @ref orca_interface_pathfollower2d
- @ref orca_interface_power
- @ref orca_interface_status
- @ref orca_interface_tracer

@par Configuration

- @c Probe.Config.Driver (string)
    - Type of display driver
    - Valid values: { 'term-iostream', 'gui-qt' }
    - Default: 'term-iostream'

- @c Probe.Config.FactoryLibNames (string)
    - A space-separated list of libraries containing slave factories.
    - This list is ordered.  Putting a custom library earlier in the list means that it will be used to instantiate interface probes before later factories.
    - Example: 'libMyProbeFactory.so libOrcaProbeFactory.so'. If MyProbeFactory implements the LaserScanner2d probe it will be used in place of the standard one. 
    - Default: 'libOrcaProbeFactory.so'

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@section orca_probe_iostream Basic display driver to terminal window.

Displays lists of options with available entries numbered. Here's an example of the Component menu. The platform @e agave has 6 components registered but only 3 could be reached (ice_pinged).

@verbatim
=======================================================
Platform : agave
-------------------------------------------------------
Select a component from the list:
        agave/brick
        agave/logger
 2      agave/roverapp
        agave/mastertest
 4      agave/pingserver
        agave/logreplaytest
 6      agave/systemadmindatabase
-------------------------------------------------------
 u      up
 U      top
 r      reload
 q      quit
=======================================================
@endverbatim

@section orca_probe_qt GUI driver using Qt

A GUI driver which emulates the 'column view' of the MacOS X Finder.

@par Authors

Alex Makarenko

*/

