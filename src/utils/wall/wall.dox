/*
 * Orca Project: Components for robotics 
 *               http://orca-robotics.sf.net/
 * Copyright (c) 2004-2007 Alexei Makarenko
 *
 * This copy of Orca is licensed to you under the terms described in the
 * ORCA_LICENSE file included in this distribution.
 *
 */

/*!

@ingroup orca_utils
@ingroup orca_cpp
@ingroup orca_linux
@defgroup orca_util_wall Wall
@brief A utility to simulate Orca interfaces.

@par Provides

- @ref orca_interface_home

@par Requires

- none

@par Operation

This utility connects to the registry and gets a list of components. The user can then select an component and get a list of its interfaces (if Home interface is available). Then choose an interface (if supported by Wall) and get a list of operations. Choose an operation to call, e.g. getData(). 

This utility loads plug-in libraries containing a @e simulator per interface. Custom simulators can be supplied with external factory libraries. The default library which comes with the Orca distribution supports the following interfaces:
- @ref orca_interface_binaryswitch
- @ref orca_interface_camera
- @ref orca_interface_cpu
- @ref orca_interface_drivebicycle
- @ref orca_interface_gps
- @ref orca_interface_home
- @ref orca_interface_laserscanner2d
- @ref orca_interface_localise2d
- @ref orca_interface_localise3d
- @ref orca_interface_pathfollower2d
- @ref orca_interface_power
- @ref orca_interface_status
- @ref orca_interface_tracer

@par Configuration

- @c Wall.Config.FactoryLibNames (string)
    - A space-separated list of libraries containing slave factories.
    - This list is ordered.  Putting a custom library earlier in the list means that it will be used to instantiate interface simulators before later factories.
    - Example: 'libMyWallFactory.so libOrcaWallFactory.so'. If MyWallFactory implements the LaserScanner2d simulator it will be used in place of the standard one. 
    - Default: 'libOrcaWallFactory.so'

An example configuration file is installed into [ORCA-INSTALL-DIR]/cfg/ directory.

@par Authors

Alex Makarenko

*/

